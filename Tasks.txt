o Test DatabaseRepository
    - Test Improved Reference Initialization (use large random set of test data)
o Setup Databases...
    - SQL Server
    - SQL Server Compact
    - SQL Server Express
    - SQLite
    - MS Access
    - PostgreSQL
    - MySQL
    - Oracle (express)
    - Informix
    - Sybase
    - DB2
    - Teradata
o Restructure DatabaseRepositoryTest to work on multiple databases
    - Test SQL Server
    - Test SQL Server Compact
    - Test SQL Server Express
    - Test SQLite
    - Test MS Access
    - Test PostgreSQL
    - Test MySQL
    - Test Oracle (express)
    - Test Informix
    - Test Sybase
    - Test DB2
    - Test Teradata
o Rename / rebrand Xanotech.Repository as NRepository
o Rename / rebrand Xanotech.Tools as XTools
o Move RepositoryController from Xanotech.Web to NRepository
o Merge Xanotech.Web into XTools
o Create RepositoryController and JSRepository.js
    - Split out query logic common to both NRepository and RepositoryController
o Implement Producer / Consumer for Reads
o Implement Mapping functionality for NRepository and JSRepository
o Implement Transaction capability to NRepository and JSRepository
o Change BackgroundTaskQueue to use BlockingCollection
o Create a generic UserController based on wheresmylinks user code
o Create an ajax / javascript error handler (that integrates with other tools)
o Create NWebRepository


xRepository API...
count(Prototype || tablename, [criteriaObject]):
    returns the number of objects matching the criteria
create(Prototype || tablename): returns a new object (with null properties based on table)
find(Prototype || tablename, [criteriaObject]): returns a cursor
    count([applySkipLimit]) - if applySkipLimit, counts number of records that will
        be returned by the cursor.  if not, counts total number of records.
    forEach(callback)
    hasNext - tells you if next will return a document (or null)
    limit(maxObjects)
    map(callback)
    next() - gets the next (single) record
    size() - same as count(true)
    skip(numToSkip) - number of records to skip before returning results
    sort(sortObject) - sortObject keys are properties.
        1 indicates ascending, -1 indicates descending
    toArray() - returns all records
findOne(Prototype || tablename, [criteriaObject])
remove([Prototype || tablename], object or objectArray):
    object(s) provided must have primary keys specified
save([Prototype || tablename], object or objectArray):
    primary keys not present: will assume is new and attempt to autoGenerate key value.
    primary keys specified:
        if _repoData is present, it will use this to determine if the object is new or not
        if _repoData is not present, it will see if there is already a record in the db


Generic User Domain
-------------------

UserSession
    Id
    ActivityDate
    Code
    UserProfileId

UserRegistration
    Id
    Code
    CreationDate
    EmailAddress
    UserProfileId

UserProfile
    Id
    Name
    EmailAddress
    PasswordHash
    NavigationCode
    SearchEngine

UserSetting
    Id
    Name
    Value
    UserProfileId